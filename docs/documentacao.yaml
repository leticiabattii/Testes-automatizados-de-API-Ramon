openapi: 3.0.0
info:
  title: API Turma  de Backend
  description: Documentação da API para gerenciar produtos e clientes.

servers:
  - url: http://localhost:8000
paths:
  /produtos:
    get:
      summary: Listar todos os produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '165f3117-cf4a-4945-b33e-1e050d351f9b'
                    nome:
                      type: string
                      example: 'lego'
                    preco:
                      type: number
                      example: 99

    post:
      summary: Criar um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: 'lego'
                preco:
                  type: number
                  example: 99
      responses:
        '201':
          description: Produto criado com sucesso
        '400':
          description: Erro de validação

  /produtos/{id}:
    get:
      summary: Obter informações de um produto pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: string
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: '165f3117-cf4a-4945-b33e-1e050d351f9b'
                  nome:
                    type: string
                    example: 'lego'
                  preco:
                    type: number
                    example: 99
        '404':
          description: Produto não encontrado

    put:
      summary: Atualizar um produto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: 'lego atualizado'
      responses:
        '200':
          description: Produto atualizado com sucesso
        '404':
          description: Produto não encontrado

    delete:
      summary: Deletar um produto pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do produto
          schema:
            type: string
      responses:
        '204':
          description: Produto deletado com sucesso
        '404':
          description: Produto não encontrado

  /clientes:
    get:
      summary: Listar todos os clientes
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '936cd5ae-9628-452b-ad37-bebeb5385503'
                    nome:
                      type: string
                      example: 'leticia'
                    email:
                      type: string
                      example: 'leticia@teste.com'

    post:
      summary: Criar um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: 'leticia'
                email:
                  type: string
                  example: 'leticia@teste.com'
                senha:
                  type: string
                  example: 'senhasuperleticia'
      responses:
        '201':
          description: Cliente criado com sucesso
        '400':
          description: Erro de validação

  /clientes/{id}:
    get:
      summary: Obter informações de um cliente pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
        '404':
          description: Cliente não encontrado

    put:
      summary: Atualizar um cliente existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: 'leticia Atualizado'
      responses:
        '200':
          description: Cliente atualizado com sucesso
        '404':
          description: Cliente não encontrado

    delete:
      summary: Deletar um cliente pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do cliente
          schema:
            type: string
      responses:
        '204':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado

  /auth/login:
    post:
      summary: Realizar login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'leticia@teste.com'
                senha:
                  type: string
                  example: 'senhasuperleticia'
      responses:
        '200':
          description: Login realizado com sucesso
        '401':
          description: Credenciais inválidas

  /auth/logout:
    post:
      summary: Realizar logout
      responses:
        '200':
          description: Logout realizado com sucesso